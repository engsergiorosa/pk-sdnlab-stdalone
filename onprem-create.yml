---
# purpose: Create dummies interfaces abd bridges.
# purpose: Create devices in packet.net site.
# CAUTION: WIll reboot the KVM server
# CAUTION: It would change your selinux, forwarding and iptables seetings
# CAUTION: Will disable NetworkManager and firewall
# Author: Mauricio Rojas / pinrojas.com
 
- hosts: localhost
  gather_facts: no
  remote_user: root
  vars:
    dns_domain: sdn40r8.lab
    bmetals:
      - { device_name: core ,
          device_ip: 172.16.0.10 ,
          public_if: eth0 ,
          br_connect: [
            { bridge: core, gateway: 192.168.0.1, prefix: 24, dhcp_min: 110, dhcp_max: 140, dns: 192.168.0.12 },
            { bridge: wan, gateway: 10.250.250.1, prefix: 24, dhcp_min: 110, dhcp_max: 140 , dns: 10.250.250.2 },
            { bridge: inet, gateway: 80.80.80.1, prefix: 24, dhcp_min: 110, dhcp_max: 140, dns: 80.80.80.2 },
            { bridge: branch1 },
            { bridge: branch2 }
          ]
        }
    sec_rules:
      - { type: tcp , dport: 22 , saddr: 0.0.0.0/0 }
      # openvswitch vxlan
      - { type: udp , dport: 4789 , saddr: 147.75.0.0/16 } 
      - { type: udp , dport: 4789 , saddr: 10.0.0.0/8 } 
      # ssh port access permissions
      - { type: tcp , dport: "2000:2040" , saddr: 0.0.0.0/0 }
      # vsd port access permissions 
      - { type: tcp , dport: 8443 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 5222 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 61613 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 61614 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 7443 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 443 , saddr: 0.0.0.0/0 }
      - { type: udp , dport: 29090 , saddr: 0.0.0.0/0 }
      # util port access permissions
      - { type: tcp , dport: 11443 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 12443 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 29090 , saddr: 0.0.0.0/0 }
      # stats port access permissions
      - { type: tcp , dport: 39090 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 6200 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 5601 , saddr: 0.0.0.0/0 }
      # webvirtmgr port access permissions
      - { type: tcp , dport: 8090 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 6080 , saddr: 0.0.0.0/0 }
      # vsc port access permissions
      - { type: tcp , dport: 56213 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 6633 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 179 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 161 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 162 , saddr: 0.0.0.0/0 }
      # nsg/vrs port access permissions
      - { type: udp , dport: 4789 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 53 , saddr: 0.0.0.0/0 }
      - { type: udp , dport: 53 , saddr: 0.0.0.0/0 }
      - { type: udp , dport: 123 , saddr: 0.0.0.0/0 }
      - { type: tcp , dport: 56213 , saddr: 0.0.0.0/0 } 

  tasks:    
    
    - name: Create var
      set_fact: 
        ip_item: "{{ ip_item|default({}) | combine( { 'device_name': item.1.device_name , 'device_ip' : item.1.device_ip } ) }}"
      with_indexed_items: "{{ bmetals }}"
      register: ip_item_results
    
    - name: debug
      debug: var=ip_item_results
    
    - name: make a list
      set_fact: iphost_list='{{ ip_item_results.results | map(attribute='ansible_facts.ip_item') | list }}'
    
    - name: debug
      debug: var=iphost_list
    
    - name: Creating host_vars files of servers
      template: src=onprem_servers.j2 dest="{{ playbook_dir }}/host_vars/{{ item.1.device_name }}" backup=no
      with_indexed_items: "{{ bmetals }}"  
    
    - name: "Adding records to inventory file under [bmetal]"
      lineinfile:
        dest: "{{playbook_dir}}/hosts"
        regexp: "^{{ item.1.device_name }} "
        insertafter: '^\[bmetal\]$'
        line: "{{ item.1.device_name }} ansible_host={{ item.1.device_ip }} ansible_user=root"
      with_indexed_items: "{{ bmetals }}"
    
    - name: "Adding IPs to host_vars files for vxlans"
      lineinfile:
        dest: "{{ playbook_dir }}/host_vars/{{ item[0].device_name }}"
        regexp: "^       vxlan_dest : {{ item[1].device_name }} ,$"
        line: '       vxlan_dest : {{ item[1].device_ip }} ,'
        backrefs: yes
      with_nested: 
        - "{{ bmetals }}"
        - "{{ iphost_list }}"
    
    - name: "Adding IPs to inventory file under [bmetal]"
      replace:
        dest: "{{playbook_dir}}/hosts"
        regexp: "^(.*)ansible_host={{ item.1.device_name }}(.*)$"
        replace: '\1ansible_host={{ item.1.device_ip }}\2'
      with_indexed_items: "{{ bmetals }}"
    
    - name: "Create bmetal groupvar file"
      template: src=onprem_bmetal.j2 dest="{{ playbook_dir }}/group_vars/bmetal" backup=no
    
    - name: list of host files and store it in register
      raw: find {{ playbook_dir }}/host_vars -type f -name "*{{ domain }}"
      register: host_files
    
    #- debug:
    #    msg: "{{ host_files.stdout_lines }}"  
    
    - name: create array of public_ips and hosts
      raw: grep ansible_host hosts | sed -e 's/^\(.*\) .*=\(.*\) .*$/\1 \2/' | grep -v {{ dns_domain }}
      register: bmetal_array
    
    #- debug:
    #    msg: "{{ bmetal_array.stdout_lines }}"  
    
    - name: "Adding records to hostvars  under [bmetal]"
      lineinfile:
        dest: "{{ item[1] }}"
        regexp: "^hypervisor: {{ item[0] | regex_replace('^(.*) .*$','\\1') }}$"
        line: "hypervisor: {{ item[0] | regex_replace('^.* (.*)$','\\1') }}"
        backrefs: yes
      with_nested: 
         - "{{ bmetal_array.stdout_lines }}"
         - "{{ host_files.stdout_lines }}"
