---
# build.yml: Create your host and group var files from this
- hosts: localhost
  gather_facts: no

  vars:
    ntp_server_list:
      - "{{ lab_network_prefix }}.12"
    dns_server_list:
      - "{{ lab_network_prefix }}.12"
    dns_domain: "{{ lab_domain }}"
    nuage_vrs_rpm_location: "https://s3-us-west-2.amazonaws.com/nuage-demo-cala/40r8+files/nuage-openvswitch-4.0.8-172.el7.x86_64.rpm"
    nuage_dockermon_rpm_location: "https://s3-us-west-2.amazonaws.com/nuage-demo-cala/40r8+files/nuage-docker-monitor-4.0.8-172.el7.x86_64.rpm"
    public_if: bond0
    nuage_license_key: "{{ lookup('file', '/home/dev/.nuage_license_key') }}"
    summary_file: "/home/dev/packet-nuagevns/.summary"
    ssh_key:
    - "{{ lookup('file', '/home/dev/.ssh/id_rsa.pub') }}"

  pre_tasks:

    - name: Read instances settings from file
      include_vars: cfg/{{ nuage_release }}/nuage-core-instances.yml 

  tasks:

    - name: Create directories
      file: path={{ playbook_dir }}/{{ item }}/ state=directory
      with_items:
        - host_vars
        - group_vars
        - extras

    - name: Create host_vars files for servers
      template: src=servers.j2 backup=no dest={{ playbook_dir }}/host_vars/{{ item.hostname }}
      with_items: "{{ servers }}"

    - name: Create host_vars files for VSC's
      template: src=vsc.j2 backup=no dest={{ playbook_dir }}/host_vars/{{ item.hostname }}
      with_items: "{{ vsc_controllers }}"

    - name: Create hosts file
      template: src=hosts.j2 dest="{{ playbook_dir }}/hosts" backup=no

    - name: Create group_vars/all file
      template: src=group_vars.all.j2 dest="{{ playbook_dir }}/group_vars/all" backup=no

    - name: Create vsd_script.py file in extras
      template: src=vsd_script.py.j2 dest="{{ playbook_dir }}/extras/vsd_script.py" backup=no

    - name: Create YML files
      template: src={{ item }}.j2 dest="{{ playbook_dir }}/{{ item }}" backup=no
      with_items:
        - deploy-all.yml
        - reset-all-domains.yml
        - nuage-install.yml
        - util-predeploy.yml
        - util-deploy.yml
        - nserver-deploy.yml
        - stat-predeploy.yml
        - stat-deploy.yml
        - vsd-deploy.yml
        - vsd-postinstall.yml
        - vsc-profiles.yml 

# Creating bare metals servers at packet.net

- hosts: localhost
  gather_facts: no
  remote_user: root

  vars:
    packet_token: "{{ lookup('file', '/home/dev/.packet_token') }}"
    project_id: "{{ lookup('file', '/home/dev/.packet_project_id') }}"
    dns_domain: "{{ lab_domain }}"

  pre_tasks:

    - name: Read instances settings from file
      include_vars: cfg/{{ nuage_release }}/packet-bmetals.yml

  tasks:

    - name: Creating a ssh key nuage-vns-inabox in packet.net
      packet_sshkey:
        label: "sdnlab-{{ project_id | regex_replace('^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-([0-9a-f]*)$', '\\1') }}"
        key: "{{ lookup('file', '/home/dev/.ssh/id_rsa.pub') }}"
        state: present
        auth_token: "{{ packet_token }}"

    - name: Creating a Bare Metal server
      packet_device:
        project_id: "{{ project_id }}"
        hostnames: "{{ item.device_name }}"
        plan: "{{ item.bmetal_plan }}"
        facility: "{{ item.facility }}"
        operating_system: "{{ item.osystem }}"
        state: present
        auth_token: "{{ packet_token }}"
      with_items: "{{ bmetals }}"

    - name: "Waiting up to 10min for server"
      pause:
        minutes: 10

    - name: "Getting the IP address from Packet server"
      local_action: command python {{playbook_dir}}/files/packet_get_ipaddr.py {{ project_id }} {{ packet_token }} {{ item.device_name }}
      register: pk_private_ip
      with_items: "{{ bmetals }}"

    - name: "Getting the Public IP address from Packet server"
      local_action: command python {{playbook_dir}}/files/packet_get_ipaddr_pub.py {{ project_id }} {{ packet_token }} {{ item.device_name }}
      register: pk_public_ip
      with_items: "{{ bmetals }}"

    - name: Create var
      set_fact:
        ip_item: "{{ ip_item|default({}) | combine( { 'device_name': item.1.device_name , 'private_ip' : pk_private_ip.results[item.0].stdout } ) }}"
    #  set_fact: ip_item="{ device_name: '{{ item.1.device_name }}' , private_ip: '{{ pk_private_ip.results[item.0].stdout }}'}"
      with_indexed_items: "{{ bmetals }}"
      register: ip_item_results

    - name: debug
      debug: var=ip_item_results

    - name: make a list
      set_fact: iphost_list='{{ ip_item_results.results | map(attribute='ansible_facts.ip_item') | list }}'

    - name: debug
      debug: var=iphost_list

    - name: Creating host_vars files of servers
      template: src=pk-servers.j2 dest="{{ playbook_dir }}/host_vars/{{ item.1.device_name }}" backup=no
      with_indexed_items: "{{ bmetals }}"

    - name: "Adding records to inventory file under [bmetal]"
      lineinfile:
        dest: "{{playbook_dir}}/hosts"
        regexp: "^{{ item.1.device_name }} "
        insertafter: '^\[bmetal\]$'
        line: "{{ item.1.device_name }} ansible_host={{ pk_public_ip.results[item.0].stdout }} ansible_user=root"
      with_indexed_items: "{{ bmetals }}"

    - name: "Adding IPs to host_vars files for vxlans"
      lineinfile:
        dest: "{{ playbook_dir }}/host_vars/{{ item[0].device_name }}"
        regexp: "^       vxlan_dest : {{ item[1].device_name }} ,$"
        line: '       vxlan_dest : {{ item[1].private_ip }} ,'
        backrefs: yes
      with_nested:
        - "{{ bmetals }}"
        - "{{ iphost_list }}"

    - name: "Adding IPs to inventory file under [bmetal]"
      replace:
        dest: "{{playbook_dir}}/hosts"
        regexp: "^(.*)ansible_host={{ item.1.device_name }}(.*)$"
        replace: '\1ansible_host={{ pk_public_ip.results[item.0].stdout }}\2'
      with_indexed_items: "{{ bmetals }}"

    - name: "Create bmetal groupvar file"
      template: src=bmetal.j2 dest="{{ playbook_dir }}/group_vars/bmetal" backup=no

    - name: list of host files and store it in register
      raw: find {{ playbook_dir }}/host_vars -type f -name "*{{ domain }}"
      register: host_files

    #- debug:
    #    msg: "{{ host_files.stdout_lines }}"

    - name: create array of public_ips and hosts
      raw: grep 147 hosts | sed -e 's/^\(.*\) .*=\(.*\) .*$/\1 \2/' | grep -v {{ dns_domain }}
      register: bmetal_array

    #- debug:
    #    msg: "{{ bmetal_array.stdout_lines }}"

    - name: "Adding records to hostvars  under [bmetal]"
      lineinfile:
        dest: "{{ item[1] }}"
        regexp: "^hypervisor: {{ item[0] | regex_replace('^(.*) .*$','\\1') }}$"
        line: "hypervisor: {{ item[0] | regex_replace('^.* (.*)$','\\1') }}"
        backrefs: yes
      with_nested:
         - "{{ bmetal_array.stdout_lines }}"
         - "{{ host_files.stdout_lines }}"    
